/* Result of compilation do not edit. */
stack_unit_si_to_si_base(expression):=block([ui,pfi,ex,workex,oldsimp],oldsimp:simp,simp:false,ex:stackunits_make(expression),ex:ev(ex,displaydp = lambda([a,b],a),displaysf = lambda([a,b],a)),workex:stack_units_units(ex),if debug then (print("stack_unit_si_to_si_base: working with the following."),print(ex),print(workex)),if is(workex = NULLUNITS) then return(expression),exop:safe_op(expression),simp:true,for ui:1 thru length(stack_unit_other_unit_code) do (workex:subst(stack_unit_other_unit_conversions[ui],stack_unit_other_unit_code[ui],workex)),for ui:1 thru length(stack_unit_si_unit_code) do (for pfi:1 thru length(stack_unit_si_prefix_code) do (workex:subst(stack_unit_si_prefix_multiplier[pfi]*stack_unit_si_unit_code[ui],vconcat(stack_unit_si_prefix_code[pfi],stack_unit_si_unit_code[ui]),workex)),workex:subst(stack_unit_si_unit_conversions[ui],stack_unit_si_unit_code[ui],workex)),if debug then (print("stack_unit_si_to_si_base: after base conversion"),print(workex)),workex:stackunits_make(workex),if not(stack_units_nums(ex) = NULLNUMS and stack_units_nums(workex) = NULLNUM) then workex:stackunits(ev(stack_units_nums(ex)*stack_units_nums(workex),NULLNUM = 1),stack_units_units(workex)),simp:oldsimp,if not(safe_op(expression) = "stackunits") then workex:stackunits_to_product(workex),return(workex))$
backtosibase(expression):=block([simp],return(stack_unit_si_to_si_base(expression)))$
str_to_html(string_to_escape):=simplode(map(str_to_html_char,charlist(string_to_escape)))$
str_to_html_char(c):=if c = "&" then "&amp;" else if c = "'" then "&#39;" else if c = "\"" then "&quot;" else if c = ">" then "&gt;" else if c = "<" then "&lt;" else c$
str_to_js(string_to_escape):=simplode(map(str_to_js_char,charlist(string_to_escape)))$
str_to_js_char(c):=if c = "\\" then "\\\\" else if c = "\"" then "\\\"" else if c = "'" then "\\'" else if c = ascii(8) then "\\b" else if c = ascii(9) then "\\t" else if c = ascii(10) then "\\n" else if c = ascii(12) then "\\f" else if c = ascii(13) then "\\r" else c$
